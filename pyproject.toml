[tool.poetry]
name = "kelpie-carbon"
version = "0.1.0"
description = "Kelp Forest Carbon Sequestration Assessment"
authors = ["Ryan Eyre <ryaneyre1337@gmail.com>"]
readme = "README.md"
packages = [{include = "kelpie_carbon", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
typer = "^0.16.0"
numpy = "^2.3.0"
fastapi = "^0.115.12"
pydantic = "^2.0.0"
dvc-s3 = "^3.2.0"
uvicorn = {extras = ["standard"], version = "^0.34.3"}
rasterio = "^1.4.3"
pystac-client = "^0.8.5"
planetary-computer = "^1.0.0"
rioxarray = "^0.18.0"
earthaccess = "^0.14.0"
geopandas = "^1.1.0"
xarray = "^2025.4.0"
scipy = "^1.15.3"
scikit-learn = "^1.7.0"
pandas = "^2.3.0"
matplotlib = "^3.10.3"
seaborn = "^0.13.2"
pillow = "^11.2.1"
pyyaml = "^6.0.1"
# Budget Deep Learning Dependencies (zero-cost approaches)
torch = "^2.5.0"
torchvision = "^0.20.0"
segment-anything = "^1.0"
opencv-python = "^4.8.0"
# segmentation-models-pytorch = "^0.3.4"  # Optional: U-Net transfer learning
scikit-image = "^0.25.2"
# Professional Reporting Dependencies
folium = "^0.18.0"
plotly = "^5.15.0"
contextily = "^1.6.0"
earthpy = "^0.9.4"
streamlit = "^1.32.0"
jupyter = "^1.1.1"
nbformat = "^5.10.4"
jinja2 = "^3.1.4"
weasyprint = "^62.3"
sympy = "^1.12"
omegaconf = "^2.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-cov = "^6.1.1"
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.2.0"
mypy = "^1.16.0"
pre-commit = "^4.2.0"
dvc = {extras = ["ssh"], version = "^3.60.0"}
httpx = "^0.28.1"
pytest-asyncio = "^1.0.0"
pytest-mock = "^3.14.1"
pytest-xdist = "^3.7.0"
ruff = "^0.11.13"

[tool.poetry.scripts]
kelpie-carbon = "kelpie_carbon.core.cli:app"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "I", "N", "B", "A", "C4", "UP", "SIM", "PYI"]
ignore = [
    "E501",  # Line too long (Black handles this)
    "E203",  # Whitespace before ':'
]

# Same as Black.
line-length = 88

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12.
target-version = "py312"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kelpie_carbon"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rasterio.*",
    "geopandas.*",
    "xarray.*",
    "rioxarray.*",
    "planetary_computer.*",
    "pystac_client.*",
    "segment_anything.*",
    "earthaccess.*",
    "folium.*",
    "plotly.*",
    "contextily.*",
    "earthpy.*",
    "streamlit.*",
    "weasyprint.*",
]
ignore_missing_imports = true
